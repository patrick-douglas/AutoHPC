#!/bin/bash
w=$(tput sgr0) 
r=$(tput setaf 1)
g=$(tput setaf 2) 
y=$(tput setaf 3)

#root requirements
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "${y}-----------------------------------------------------------------------------------"
    echo "This script requires root privileges, please run${w} sudo su${y} or${w} sudo -i ${y}prior to run it"
    echo "e.g.${w} sudo $0 -u <username> ${y}"
    echo "-----------------------------------------------------------------------------------"
    exit
fi
 
USAGE="USAGE: $0 -u <username>"
if [ "$#" -lt "1" ] 
then 
    echo -e $USAGE;
exit 1    
else 
    var1=$2;
fi

while getopts u: option
do
case "${option}"
in
u) user_name=$OPTARG;;
esac
done

if [ "$user_name" = "" ]; then
"${g}Error, missing arguments:${y} -u | User name | <string>
${w}$USAGE"
exit 1
fi
threads=`nproc`
echo "${y}$USAGE ${g}"
echo	"----------------------------------------------------------------------------------"
echo    "-------------------- Install Trinity and required packages -----------------------"
echo	"----------------------------------------------------------------------------------"
echo "User name:${w}"
echo "${w}"
echo "$user_name"

echo "${g}----------------------------------------------------------------------------------"
echo "${w}"

apt-fast update
apt-fast -y install software-properties-common
#DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-fast -q -y -o "Dpkg::Options::=--force-confdef" -o "Dpkg::Options::=--force-confold" upgrade
/bin/bash -c "$(curl -sL https://git.io/vokNn)"
echo "${y}***************************"
echo 'Installing required packages...'
echo "***************************${w}"
#Required packages
apt-fast install -y gcc libncurses5-dev zlib1g-dev build-essential 
apt-fast install -y build-essential fort77 xorg-dev
apt-fast install -y liblzma-dev libblas-dev gfortran gcc-multilib 
apt-fast install -y gobjc++ libcurl4-gnutls-dev aptitude libreadline-dev 
apt-fast install -y libbz2-dev libssl-dev gedit libcairo2-dev libgtk2.0-dev autoconf

apt-fast install --yes -y apt-utils perl perl-base git libtbb-dev build-essential libtool python3-pip libffi-dev

sudo aptitude install libreadline-dev -y
sudo apt-fast install python-setuptools -y
sudo apt-fast install python3-setuptools -y
sudo apt-fast install python3-testresources -y
su -c '/usr/local/bin/pip3 install -U setuptools' $user_name
su -c '/usr/local/bin/pip3 install numpy' $user_name
su -c '/usr/local/bin/pip3 install --upgrade pip' $user_name
su -c '/usr/local/bin/pip3 install biopython' $user_name

./java
./pcre -u $user_name
./python3 -u $user_name
./R -u $user_name
./R-packages
./XZ -u $user_name
./cmake -u $user_name
./bcftools -u $user_name
./rsem -u $user_name
./samtools -u $user_name
./jellyfish -u $user_name
./salmon -u $user_name
./bowtie2 -u $user_name
./ncbi-blast+ -u $user_name
./parafly -u $user_name
./trinity-rna-seq -u $user_name
./augustus -u $user_name
./subread -u $user_name
./hmmer -u $user_name
./hpcGridRunner -u $user_name
./fastqc -u $user_name
./seqtk -u $user_name
./wine
./VIRTUS -u $user_name
su -c "cd /home/$user_name/ && git clone https://github.com/patrick-douglas/Corset-tools.git" $user_name
echo 'HPC Grid Runner Latest github Version'
echo    "${g}---------------------------------------------"
echo	" "
echo	" "
echo -e "setf 6" | tput -S
echo	"----------------------------------------------------------------------------------"
echo    "--------------------- We finhished the Master configuration ----------------------"
echo    "----------------------------------------------------------------------------------"
echo -e "setf 6" | tput -S
echo	"suport by e-mail to patrick@ufpa.br"
echo    'Thank you :-D'
echo	" "
echo "
				 ___        ______    __     __
				|   |      |	  \  |  \   |  | 
				|   |      |   D   ) |   \  |  | 
				|   |      |      /  |    \ |  | 
				|   |____  |      \  |  |\ \|  | 
				|        | |   D   ) |  | \    |  
				|________| |______/  |__|  \___|

     Laborat√≥rio de Biologia Molecular e Neuroecologia - IFPA 
"
./sft-ver

