#!/bin/bash
mkdir -p /home/.tmp/
#color defaults 
w=$(tput sgr0) 
r=$(tput setaf 1)
g=$(tput setaf 2) 
o=$(tput setaf 3) 
p=$(tput setaf 5)

USAGE="USAGE: $0 -c <clustername> -p <ldappassword>"

if [ "$#" -lt "1" ] 
then 
    echo -e $USAGE;
exit 1    
else 
    var1=$2;
fi

while getopts c:p: option
do
case "${option}"
in
c) clustername=$OPTARG;;
p) ldappassword=$OPTARG;;
esac
done

if [ "$clustername" = "" ]; then
echo -e "${g}Error, missing arguments:${y} -c | Cluster domain name | <string>
${w}$USAGE"
exit 1
fi
if [ "$ldappassword" = "" ]; then
echo -e "${g}Error, missing arguments:${y} -p | ldap password | <string>
${w}$USAGE"
exit 1
fi

echo "${g}"  # set fg g
echo	"=================================${w}"
echo	"Testing your network connection${g}"
echo	"================================="
#function of slash spin
spinner()
{
    local pid=$1
    local delay=0.75
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

( wget -q --tries=10 --timeout=20 --spider http://google.com ) &
echo -n "Please wait... "
spinner $!
echo "DONE!${w}"

if [[ $? -eq 0 ]]; then
echo ""
echo "Connection OK"
echo "${g}"
else
echo "
Ouch!!!
--------------------------------------------------------------------------------------------------------
You are OFFLINE, your computer need to be connected to the Internet to install updates and some packages
If you continue without INTERNET connection the installation will no work
--------------------------------------------------------------------------------------------------------
"
function pause(){
   read -p "$*"
}
echo -e "setf 4" | tput -S
pause 'Connect to the Internet and Press [Enter] key to continue or [Ctrl+C] to exit.'
fi

echo	"${g}"
echo	"---------------------------------------------------------------------------------"
echo    "---------------------- Phase 1: Identify the Cluster ----------------------------"
echo    "---------------------------------------------------------------------------------"
	echo ""

echo ""

echo ""
echo "==============================================================="
echo "Cluster name or domain name (Example lbn):${w}"
echo "$clustername ${g}"
echo "==============================================================="
echo ""
#ldap password
echo "${g}"
echo "==============================================================="
echo "Password for LDAP (The computer password is recommended)"
echo "===============================================================${o}"
echo "$ldappassword ${g}"
echo "===============================================================${w}"
apt-get update

echo "${g}"
echo "==============================================================="
echo "=================Configuring LDAP Server======================="
echo "==============================================================="
echo "${w}"
apt-get purge slapd ldap-utils phpldapadmin -y

DEBIAN_FRONTEND=noninteractive apt-fast install slapd ldap-utils expect -y 
#dpkg-reconfigure slapd

echo '#!/usr/bin/expect' > /home/.tmp/expect.ex
echo "spawn dpkg-reconfigure slapd" >>/home/.tmp/expect.ex
echo "expect \"Omit OpenLDAP server configuration?\"" >>/home/.tmp/expect.ex
echo "send \"N\\r\"" >>/home/.tmp/expect.ex
echo "expect \"DNS domain name:\"" >>/home/.tmp/expect.ex
echo "send \"\025\"" >>/home/.tmp/expect.ex
echo "send \"$clustername.com\r\"" >>/home/.tmp/expect.ex
echo "expect \"Organization name:\"" >>/home/.tmp/expect.ex
echo "send \"\025\"" >>/home/.tmp/expect.ex
echo "send \"$clustername.com\r\"" >>/home/.tmp/expect.ex
echo "expect \"Administrator password:\"" >>/home/.tmp/expect.ex
echo "send \"$clustername\r\"" >>/home/.tmp/expect.ex
echo "expect \"Confirm password:\"" >>/home/.tmp/expect.ex
echo "send \"$clustername\r\"" >>/home/.tmp/expect.ex
echo "expect \"Do you want the database to be removed when slapd is purged?\"" >>/home/.tmp/expect.ex
echo "send \"N\r\"" >>/home/.tmp/expect.ex
echo "expect \"Move old database?\"" >>/home/.tmp/expect.ex
echo "send \"Y\r\"" >>/home/.tmp/expect.ex
echo "expect eof" >>/home/.tmp/expect.ex
chmod +x /home/.tmp/expect.ex
/home/.tmp/expect.ex
rm -rf /home/.tmp/expect.ex
apt-fast install phpldapadmin -y
ldappwSSHA=`slappasswd -s $ldappassword`

service slapd restart
#service nscd restart
service bind9 restart

#edit phpldapadmin/config.php

	sed -i "293s#.*#\$servers->setValue('server','host','master.$clustername.com');#" /etc/phpldapadmin/config.php
	sed -i "300s#.*#\$servers->setValue('server','base',array('dc=$clustername,dc=com'));#" /etc/phpldapadmin/config.php
	sed -i "326s#.*#\$servers->setValue('login','bind_id','cn=admin,dc=$clustername,dc=com');#" /etc/phpldapadmin/config.php


#Editing TemplateRender.php
sed -i "2469s#.*#                        \$default = \$this->getServer()->getValue('appearance','password_hash_custom');#" /usr/share/phpldapadmin/lib/TemplateRender.php

sudo service apache2 restart

#Editing LDAP User
DEBIAN_FRONTEND=noninteractive apt-fast install libpam-ldap nscd -y
	sed -i "27s/.*/base dc=$clustername,dc=com/" /etc/ldap.conf
	sed -i "30s,.*,uri ldap://master.$clustername.com," /etc/ldap.conf
	sed -i "52s/.*/rootbinddn cn=admin,dc=$clustername,dc=com/" /etc/ldap.conf
	echo "$ldappassword">/etc/ldap.secret
	sed -i "1s#.*#$ldappassword#" /etc/ldap.secret
	

 service bind9 restart
 service nscd restart


	echo "# LDIF Export for dc=$clustername,dc=com">/root/phpldap_config_file.ldif
	echo "# Server: My LDAP Server (master.$clustername.com)" >> /root/phpldap_config_file.ldif
	echo "# Search Scope: sub" >> /root/phpldap_config_file.ldif
	echo "# Search Filter: (objectClass=*)" >> /root/phpldap_config_file.ldif
	echo "# Total Entries: 7" >> /root/phpldap_config_file.ldif
	echo "#" >> /root/phpldap_config_file.ldif
	echo "# Generated by phpLDAPadmin (http://phpldapadmin.sourceforge.net) on July 2, 2016 7:58 pm" >> /root/phpldap_config_file.ldif
	echo "# Version: 1.2.2" >> /root/phpldap_config_file.ldif
	echo "" >> /root/phpldap_config_file.ldif
	echo "version: 1" >> /root/phpldap_config_file.ldif
	echo "" >> /root/phpldap_config_file.ldif


echo "# Entry 3: ou=groups,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "dn: ou=groups,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "objectclass: organizationalUnit" >> /root/phpldap_config_file.ldif
	echo "objectclass: top" >> /root/phpldap_config_file.ldif
	echo "ou: groups" >> /root/phpldap_config_file.ldif
	echo "" >> /root/phpldap_config_file.ldif

echo "# Entry 4: cn=admins,ou=groups,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "dn: cn=admins,ou=groups,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "cn: admins" >> /root/phpldap_config_file.ldif
	echo "gidnumber: 500" >> /root/phpldap_config_file.ldif
	echo "memberuid: me" >> /root/phpldap_config_file.ldif
	echo "objectclass: posixGroup" >> /root/phpldap_config_file.ldif
	echo "objectclass: top" >> /root/phpldap_config_file.ldif
	echo "" >> /root/phpldap_config_file.ldif

echo "# Entry 5: cn=users,ou=groups,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "dn: cn=users,ou=groups,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "cn: users" >> /root/phpldap_config_file.ldif
	echo "gidnumber: 501" >> /root/phpldap_config_file.ldif
	echo "memberuid: me" >> /root/phpldap_config_file.ldif
	echo "objectclass: posixGroup" >> /root/phpldap_config_file.ldif
	echo "objectclass: top" >> /root/phpldap_config_file.ldif
	echo "" >> /root/phpldap_config_file.ldif

echo "# Entry 6: ou=users,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "dn: ou=users,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "objectclass: organizationalUnit" >> /root/phpldap_config_file.ldif
	echo "objectclass: top" >> /root/phpldap_config_file.ldif
	echo "ou: users" >> /root/phpldap_config_file.ldif
	echo "" >> /root/phpldap_config_file.ldif

echo "# Entry 7: cn=me,ou=users,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "dn: cn=me,ou=users,dc=$clustername,dc=com" >> /root/phpldap_config_file.ldif
	echo "cn: me" >> /root/phpldap_config_file.ldif
	echo "gidnumber: 501" >> /root/phpldap_config_file.ldif
	echo "givenname: me" >> /root/phpldap_config_file.ldif
	echo "homedirectory: /home/users/me" >> /root/phpldap_config_file.ldif
	echo "objectclass: inetOrgPerson" >> /root/phpldap_config_file.ldif
	echo "objectclass: posixAccount" >> /root/phpldap_config_file.ldif
	echo "objectclass: top" >> /root/phpldap_config_file.ldif
	echo "sn: my sirname" >> /root/phpldap_config_file.ldif
	echo "uid: me" >> /root/phpldap_config_file.ldif
	echo "uidnumber: 1000" >> /root/phpldap_config_file.ldif
	echo "userpassword: $ldappwSSHA" >> /root/phpldap_config_file.ldif

ldapmodify -a -x -D "cn=admin,dc=$clustername,dc=com" -H ldap:// -w $ldappassword -f /root/phpldap_config_file.ldif

rm -rf /root/phpldap_config_file.ldif
