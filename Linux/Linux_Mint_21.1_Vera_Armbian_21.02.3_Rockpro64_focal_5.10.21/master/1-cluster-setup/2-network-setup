#!/bin/bash
mkdir -p /home/.tmp/
#color defaults 
w=$(tput sgr0) 
r=$(tput setaf 1)
g=$(tput setaf 2) 
o=$(tput setaf 3) 
p=$(tput setaf 5)

USAGE="USAGE: $0 -c <clustername> -a <primarynetworkinterfacename> -b <privatenetworkinterfacename>"

if [ "$#" -lt "1" ] 
then 
    echo -e $USAGE;
exit 1    
else 
    var1=$2;
fi

while getopts c:a:b: option
do
case "${option}"
in
c) clustername=$OPTARG;;
a) prinetworkinterface=$OPTARG;;
b) privnetworkinterface=$OPTARG;;
esac
done

if [ "$clustername" = "" ]; then
"${g}Error, missing arguments:${y} -c | Cluster domain name | <string>
${w}$USAGE"
exit 1
fi
if [ "$prinetworkinterface" = "" ]; then
"${g}Error, missing arguments:${y} -a | primary network interface | <string>
${w}$USAGE"
exit 1
fi
if [ "$privnetworkinterface" = "" ]; then
"${g}Error, missing arguments:${y} -b | private network interface | <string>
${w}$USAGE"
exit 1
fi

echo "${g}"  # set fg g
echo	"=================================${w}"
echo	"Testing your network connection${g}"
echo	"================================="
#function of slash spin
spinner()
{
    local pid=$1
    local delay=0.75
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

( wget -q --tries=10 --timeout=20 --spider http://google.com ) &
echo -n "Please wait... "
spinner $!
echo "DONE!${w}"

if [[ $? -eq 0 ]]; then
echo ""
echo "Connection OK"
echo "${g}"
else
echo "
Ouch!!!
--------------------------------------------------------------------------------------------------------
You are OFFLINE, your computer need to be connected to the Internet to install updates and some packages
If you continue without INTERNET connection the installation will no work
--------------------------------------------------------------------------------------------------------
"
function pause(){
   read -p "$*"
}
echo -e "setf 4" | tput -S
pause 'Connect to the Internet and Press [Enter] key to continue or [Ctrl+C] to exit.'
fi

echo	"${g}"
echo	"---------------------------------------------------------------------------------"
echo    "---------------------- Phase 1: Identify the Cluster ----------------------------"
echo    "---------------------------------------------------------------------------------"
	echo ""

echo ""

echo ""
echo "==============================================================="
echo "Cluster name or domain name (Example lbn):${w}"
echo "$clustername ${g}"
echo "==============================================================="
echo ""
#primary network interface
echo "==============================================================="
echo "Primary network interface (Example eno1):${w}"
echo "$prinetworkinterface"
echo "${g}==============================================================="

echo "${g}"
echo "==============================================================="
echo "Private network interface (Example enp11s0):${w}"
echo "$privnetworkinterface ${g}"
echo "==============================================================="
echo "${w}"
apt-get update

echo	"${g}----------------------------------------------------------------------------------"
echo    "------------------------ Phase 4: Setting up the network -------------------------"
echo    "----------------------------------------------------------------------------------"
echo	"${w}"


#Edit interfaces file
	echo /etc/network/interfaces
		echo "# interfaces(5) file used by ifup(8) and ifdown(8)">/etc/network/interfaces
		echo "# The loopback network interface" >> /etc/network/interfaces
		echo "auto lo" >> /etc/network/interfaces
		echo "iface lo inet loopback" >> /etc/network/interfaces
		echo "" >> /etc/network/interfaces
		echo "# The primary network interface" >> /etc/network/interfaces
		echo "auto $prinetworkinterface" >> /etc/network/interfaces
		echo "iface $prinetworkinterface inet dhcp" >> /etc/network/interfaces
		echo "" >> /etc/network/interfaces
		echo "#Private network interface" >> /etc/network/interfaces
		echo "auto $privnetworkinterface" >> /etc/network/interfaces
		echo "iface $privnetworkinterface inet static" >> /etc/network/interfaces
		echo " address 11.0.0.1" >> /etc/network/interfaces
		echo " netmask 255.255.255.0" >> /etc/network/interfaces
		echo " network 11.0.0.0" >> /etc/network/interfaces
		echo " broadcast 11.0.0.255" >> /etc/network/interfaces
		echo " pre-up iptables-restore </etc/iptables.rules" >> /etc/network/interfaces

#configuring NAT
	
	echo "1">/proc/sys/net/ipv4/ip_forward

	sed -i 's/^#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf

iptables -F -t nat
iptables -X -t nat
iptables-save
iptables -t nat -A POSTROUTING -o $prinetworkinterface -j MASQUERADE 
iptables-save
iptables-save>/etc/iptables.rules


ifup $prinetworkinterface
ifup $privnetworkinterface
sleep 10
ifdown $prinetworkinterface
ifdown $privnetworkinterface
sleep 10
ifup $prinetworkinterface
ifup $privnetworkinterface
sleep 10
ifdown $prinetworkinterface
ifdown $privnetworkinterface
sleep 10
ifup $prinetworkinterface
ifup $privnetworkinterface

publicip=$(/sbin/ip -o -4 addr list $prinetworkinterface | awk '{print $4}' | cut -d/ -f1)

echo "${g}"
echo "==============================================================="
echo "==================== Configuring DHCP ========================="
echo "==============================================================="
echo ""
echo ""
echo "==============================================================="
echo "Detected the public IP adress:"
echo "${w}"
echo "$publicip"
echo "${g}"
echo "==============================================================="
echo "${w}"

echo "${g}"
echo "==============================================================="
echo "============= Editing named.conf.default-zones ================"
echo "===============================================================${w}"

	LINE1="zone \"$clustername.com\" {"
	FILE1=/etc/bind/named.conf.default-zones
	grep -q "$LINE1" "$FILE1" || echo "$LINE1" >> "$FILE1"

	LINE2='        type master;'
	FILE2=/etc/bind/named.conf.default-zones
	grep -q "$LINE2" "$FILE2" || echo "$LINE2" >> "$FILE2"
	
	LINE2="        file \"/etc/bind/$clustername.com.fwd\";"
	FILE2=/etc/bind/named.conf.default-zones
	grep -q "$LINE2" "$FILE2" || echo "$LINE2" >> "$FILE2"
	
	LINE3='        allow-update { key rndc-key; };'
	FILE3=/etc/bind/named.conf.default-zones
	grep -q "$LINE3" "$FILE3" || echo "$LINE3" >> "$FILE3"
	
	echo "};" >> /etc/bind/named.conf.default-zones

echo " " >> /etc/bind/named.conf.default-zones

	LINE4='zone "0.0.11.in-addr.arpa" {'
	FILE4=/etc/bind/named.conf.default-zones
	grep -q "$LINE4" "$FILE4" || echo "$LINE4" >> "$FILE4"

	echo "        type master;" >> /etc/bind/named.conf.default-zones
	echo "        file \"/etc/bind/$clustername.com.rev\";" >> /etc/bind/named.conf.default-zones
	echo "        allow-update { key rndc-key; }; " >> /etc/bind/named.conf.default-zones
	
echo "};" >> /etc/bind/named.conf.default-zones

		sed -i '42,47d' /etc/bind/named.conf.default-zones

cat /etc/bind/rndc.key >> /etc/bind/named.conf.options
sed -i 's#key "rndc-key" {#key rndc-key {#' /etc/bind/named.conf.options
sed -i '31,34d' /etc/bind/named.conf.options
sed -i "19s|.*|  /etc/bind/** rw,|"   /etc/apparmor.d/usr.sbin.named

apt-fast install apparmor -y && service apparmor restart


#Configuring bind9
echo "${g}"
echo "==============================================================="
echo "==================== Configuring bind9 ========================"
echo "===============================================================${w}"

#	echo /etc/bind/$clustername.com.fwd
		echo "\$TTL 86400">/etc/bind/$clustername.com.fwd
		echo "@       IN      SOA     master.$clustername.com. root.$clustername.com. (" >> /etc/bind/$clustername.com.fwd
		echo "        1       ;Serial" >> /etc/bind/$clustername.com.fwd
		echo "        604800  ;Refresh" >> /etc/bind/$clustername.com.fwd
		echo "        86400   ;Retry" >> /etc/bind/$clustername.com.fwd
		echo "        2419200 ;Expire" >> /etc/bind/$clustername.com.fwd
		echo "        86400   ;Minimum" >> /etc/bind/$clustername.com.fwd
		echo ")" >> /etc/bind/$clustername.com.fwd
		echo "@       IN      NS      master.$clustername.com." >> /etc/bind/$clustername.com.fwd
		echo "master  IN      A       11.0.0.1" >> /etc/bind/$clustername.com.fwd



#	echo /etc/bind/$clustername.com.rev
		echo "\$TTL 86400">/etc/bind/$clustername.com.rev
		echo "@       IN      SOA     master.$clustername.com. root.$clustername.com. (" >> /etc/bind/$clustername.com.rev
		echo "        1       ;Serial" >> /etc/bind/$clustername.com.rev
		echo "        3600    ;Refresh" >> /etc/bind/$clustername.com.rev
		echo "        1800    ;Retry" >> /etc/bind/$clustername.com.rev
		echo "        604800  ;Expire" >> /etc/bind/$clustername.com.rev
		echo "        86400   ;Minimum ttl" >> /etc/bind/$clustername.com.rev
		echo ")" >> /etc/bind/$clustername.com.rev
		echo "@       IN      NS      master.$clustername.com." >> /etc/bind/$clustername.com.rev
		echo "master.$clustername.com IN      A       11.0.0.1" >> /etc/bind/$clustername.com.rev
		echo "1       IN      PTR     master.$clustername.com" >> /etc/bind/$clustername.com.rev
service bind9 start


#Configuring DHCP
	echo /etc/dhcp/dhcpd.conf
	echo "#">/etc/dhcp/dhcpd.conf
	echo "# Sample configuration file for ISC dhcpd for Debian" >> /etc/dhcp/dhcpd.conf
	echo "#">/etc/dhcp/dhcpd.conf
	echo "# Attention: If /etc/ltsp/dhcpd.conf exists, that will be used as" >> /etc/dhcp/dhcpd.conf
	echo "# configuration file instead of this file." >> /etc/dhcp/dhcpd.conf
	echo "#" >> /etc/dhcp/dhcpd.conf

	cat /etc/bind/rndc.key >> /etc/dhcp/dhcpd.conf
	echo "" >> /etc/dhcp/dhcpd.conf


	echo "zone $clustername.com. {" >> /etc/dhcp/dhcpd.conf
	echo "        primary 127.0.0.1;" >> /etc/dhcp/dhcpd.conf
	echo "        key rndc-key;" >> /etc/dhcp/dhcpd.conf
	echo "}" >> /etc/dhcp/dhcpd.conf
	echo "" >> /etc/dhcp/dhcpd.conf

	echo "zone 0.0.11.in-addr.arpa. {" >> /etc/dhcp/dhcpd.conf
	echo "        primary 127.0.0.1;" >> /etc/dhcp/dhcpd.conf
	echo "        key rndc-key;" >> /etc/dhcp/dhcpd.conf
	echo "}" >> /etc/dhcp/dhcpd.conf
	echo "" >> /etc/dhcp/dhcpd.conf

	echo "# The ddns-updates-style parameter controls whether or not the server will" >> /etc/dhcp/dhcpd.conf
	echo "# attempt to do a DNS update when a lease is confirmed. We default to the" >> /etc/dhcp/dhcpd.conf
	echo "# behavior of the version 2 packages ('none', since DHCP v2 didn't" >> /etc/dhcp/dhcpd.conf
	echo "# have support for DDNS.)" >> /etc/dhcp/dhcpd.conf
	echo "ddns-update-style interim;" >> /etc/dhcp/dhcpd.conf
	echo "authoritative;" >> /etc/dhcp/dhcpd.conf
	echo "ddns-domainname \"$clustername.com\";" >> /etc/dhcp/dhcpd.conf
	echo "ddns-rev-domainname \"in-addr.arpa\";" >> /etc/dhcp/dhcpd.conf
	echo "ddns-updates on;" >> /etc/dhcp/dhcpd.conf
	echo "" >> /etc/dhcp/dhcpd.conf

	echo "# option definitions common to all supported networks..." >> /etc/dhcp/dhcpd.conf
	echo "option domain-name \"$clustername.com\";" >> /etc/dhcp/dhcpd.conf
	echo "option domain-name-servers 11.0.0.1, $publicip;" >> /etc/dhcp/dhcpd.conf
	echo "default-lease-time 600;" >> /etc/dhcp/dhcpd.conf
	echo "max-lease-time 7200;" >> /etc/dhcp/dhcpd.conf
	echo "" >> /etc/dhcp/dhcpd.conf

	echo "subnet 11.0.0.0 netmask 255.255.255.0 {" >> /etc/dhcp/dhcpd.conf
	echo "        option routers 11.0.0.1;" >> /etc/dhcp/dhcpd.conf
	echo "        option subnet-mask 255.255.255.0;" >> /etc/dhcp/dhcpd.conf
	echo "        option time-offset -18000;" >> /etc/dhcp/dhcpd.conf
	echo "        range 11.0.0.1 11.0.0.254;" >> /etc/dhcp/dhcpd.conf
	echo "}" >> /etc/dhcp/dhcpd.conf

	echo "# If this DHCP server is the official DHCP server for the local" >> /etc/dhcp/dhcpd.conf
	echo "# network, the authoritative directive should be uncommented." >> /etc/dhcp/dhcpd.conf
	echo "#authoritative;" >> /etc/dhcp/dhcpd.conf
	echo "" >> /etc/dhcp/dhcpd.conf

	echo "# Use this to send dhcp log messages to a different log file (you also" >> /etc/dhcp/dhcpd.conf
	echo "# have to hack syslog.conf to complete the redirection)." >> /etc/dhcp/dhcpd.conf
	echo "log-facility local7;" >> /etc/dhcp/dhcpd.conf


#Editing resolv.conf
chattr -i /etc/resolv.conf
	echo "# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)">/etc/resolv.conf
	echo "#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN" >> /etc/resolv.conf
	echo "nameserver 11.0.0.1" >> /etc/resolv.conf
	echo "nameserver $publicip" >> /etc/resolv.conf
	echo "search $clustername.com Home" >> /etc/resolv.conf
cd && cp /etc/resolv.conf .
rm /etc/resolv.conf
cp resolv.conf /etc/
chattr +i /etc/resolv.conf

chmod 775 -R /etc/bind
chown -R bind /etc/bind
service isc-dhcp-server stop
service isc-dhcp-server start
echo "master.$clustername.com" > /etc/hostname 
hostname master.$clustername.com
