
#!/bin/bash
#Este script Ã© executado atraves de um script primario
#second opt Set up only torque in the nodes
w=$(tput sgr0) 
r=$(tput setaf 1)
g=$(tput setaf 2) 
y=$(tput setaf 3)
p=$(tput setaf 5)  
#root requirements
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "${y}-----------------------------------------------------------------------------------"
    echo "This script requires root privileges, please run${w} sudo su${y} or${w} sudo -i ${y}prior to run it"
    echo "e.g.${w} sudo $0 -c <clustername> -u <username> ${y}"
    echo "-----------------------------------------------------------------------------------"
    exit
fi
USAGE="$0 -c <clustername> -u <username>"

if [ "$#" -lt "3" ] 
then 
    echo -e $USAGE;
exit 1    
else 
    var1=$2;
    var2=$4;
fi

while getopts c:u: option
do
case "${option}"
in
c) cluster_name=${OPTARG};;
u) user_name=${OPTARG};;
esac
done

if [ "$cluster_name" = "" ]; then
"Error, missing arguments
Try: $USAGE"
exit 1
fi
if [ "$user_name" = "" ]; then
"Error, missing arguments
Try: $USAGE"
exit 1
fi

echo -e "${g}"
echo	"-----------------------------------------------------------------------------------"
echo    "------------------------------ Configuring SLURM ----------------------------------"
echo    "-----------------------------------------------------------------------------------"
echo "${g}Cluster name:${w}"
echo "$cluster_name"
echo "${g}User name:${w}"
echo "$user_name"
echo "${g}----------------------------------------------------------------------------------"

echo "${g}"
echo "Installing required packages"
echo ""
echo "${w}"
rm -rf /storage /root/slurm*
apt-fast update 
apt-fast install git gcc make ruby ruby-dev libpam0g-dev -y
apt-fast install -y libmariadb-dev #libmariadbclient-dev
apt-fast install -y libmariadb-dev-compat libmariadb-dev
gem install fpm

rm -rf /storage && mkdir -p /storage && cd /storage
git clone https://github.com/patrick-douglas/ubuntu-slurm.git
apt-fast install libmunge-dev libmunge2 munge -y
systemctl enable munge
systemctl start munge

apt-get install -y libdbus-1-dev

echo "${g}"
echo "-----------------------------"
echo "Testing MUNGE...${w}"
munge -n | unmunge | grep STATUS
echo "${g}-----------------------------"
echo "${w}"


apt-fast install mariadb-server -y
systemctl enable mariadb.service
systemctl start mysql
echo '#!/usr/bin/expect' > /storage/expect_mariadb.exp
echo 'spawn mysql -u root' >> /storage/expect_mariadb.exp
echo 'send "create database slurm_acct_db;\r"' >> /storage/expect_mariadb.exp
echo 'send "create user '"'"'slurm'"'"'@'"'"'localhost'"'"';\r"' >> /storage/expect_mariadb.exp
echo 'send "set password for '"'"'slurm'"'"'@'"'"'localhost'"'"' = password('"'"'slurmdbpass'"'"');\r"' >> /storage/expect_mariadb.exp
echo 'send "grant usage on *.* to '"'"'slurm'"'"'@'"'"'localhost'"'"';\r"' >> /storage/expect_mariadb.exp
echo 'send "grant all privileges on slurm_acct_db.* to '"'"'slurm'"'"'@'"'"'localhost'"'"';\r"' >> /storage/expect_mariadb.exp
echo 'send "flush privileges;\r"' >> /storage/expect_mariadb.exp
echo 'send "exit\r"' >> /storage/expect_mariadb.exp
echo 'expect eof' >> /storage/expect_mariadb.exp
chmod +x /storage/expect_mariadb.exp
/storage/expect_mariadb.exp
rm -rf /storage/expect_mariadb.exp

#slurm
threads=`nproc`
slurm_bz2=/root/slurm-22.05.0-0rc1.tar.bz2
slurm_dir=/root/slurm-22.05.0-0rc1
slurm_deb=slurm-22.05.0-0rc1_1.0_amd64.deb
slurm_URL=https://download.schedmd.com/slurm/slurm-22.05.0-0rc1.tar.bz2
slurm_v=slurm-22.05.0-0rc1
apt-fast install glib-2.0 libperl-dev libgtk2.0-dev -y
cd /root && wget $slurm_URL
cd /root && tar xjf $slurm_bz2
cd $slurm_dir && ./configure --prefix=/tmp/slurm-build --sysconfdir=/etc/slurm --enable-pam --with-pam_dir=/lib/x86_64-linux-gnu/security/ --without-shared-libslurm
cd $slurm_dir && make -j $threads
cd $slurm_dir && make contrib -j $threads
cd $slurm_dir && make install -j $threads
cd /root && fpm -s dir -t deb -v 1.0 -n $slurm_v --prefix=/usr -C /tmp/slurm-build .
cd /root && dpkg -i --force-all $slurm_deb
#cd /root && dpkg -i $slurm_deb
rm -f $slurm_deb
useradd slurm
mkdir -p /etc/slurm /etc/slurm/prolog.d /etc/slurm/epilog.d /var/spool/slurm/ctld /var/spool/slurm/d /var/log/slurm
chown slurm /var/spool/slurm/ctld /var/spool/slurm/d /var/log/slurm

cd /storage
cp ubuntu-slurm/slurmdbd.service /etc/systemd/system/
cp ubuntu-slurm/slurmctld.service /etc/systemd/system/

cp ubuntu-slurm/slurm.conf /etc/slurm/
cp ubuntu-slurm/slurmdbd.conf /etc/slurm/
chown slurm /etc/slurm/slurmdbd.conf
chmod 600 /etc/slurm/slurmdbd.conf
systemctl daemon-reload
systemctl enable slurmdbd
systemctl start slurmdbd
systemctl enable slurmctld
sinfo
systemctl start slurmctld

#Create initial slurm cluster, account, and user.

echo '#!/usr/bin/expect' > /storage/slurm_expect.exp
echo "spawn sacctmgr add cluster $cluster_name" >> /storage/slurm_expect.exp
echo 'send "y\r"' >> /storage/slurm_expect.exp
echo 'expect eof' >> /storage/slurm_expect.exp
chmod +x /storage/slurm_expect.exp
/storage/slurm_expect.exp

echo '#!/usr/bin/expect' > /storage/slurm_expect.exp
echo 'spawn sacctmgr add account compute-account description="Compute accounts" Organization=OurOrg' >> /storage/slurm_expect.exp
echo 'send "y\r"' >> /storage/slurm_expect.exp
echo 'expect eof' >> /storage/slurm_expect.exp
/storage/slurm_expect.exp

echo '#!/usr/bin/expect' > /storage/slurm_expect.exp
echo "spawn sacctmgr create user me account=compute-account adminlevel=None" >> /storage/slurm_expect.exp
echo 'send "y\r"' >> /storage/slurm_expect.exp
echo 'expect eof' >> /storage/slurm_expect.exp
/storage/slurm_expect.exp
rm -rf /storage/slurm_expect.exp

SOCKETS=`lscpu | grep "Socket(s):"  | cut -d : -f 2 | awk '{print $1}'`
THREADSPERCORE=`lscpu | grep "Thread(s) per core:" | cut -d : -f 2 | awk '{print $1}'`
CORESPERSOCKET=`lscpu | grep "Core(s) per socket:" | cut -d : -f 2 | awk '{print $1}'`
REALMEM=`free -m | grep Mem | awk '{print $2}'`
COUNT=`nvidia-smi -L > gpu.counts && wc -l < gpu.counts && rm gpu.counts`

echo "NodeName="$HOSTNAME" Sockets=$SOCKETS CoresPerSocket=$CORESPERSOCKET ThreadsPerCore=$THREADSPERCORE RealMemory=$REALMEM State=UNKNOWN" >> /etc/slurm/slurm.conf
service slurmctld restart
#service slurmd restart
echo "${g}------------------------------------------------------------------------------------------------"
sinfo -l -N
echo "------------------------------------------------------------------------------------------------${w}"
rm -rf $slurm_dir $slurm_deb $slurm_bz2

# Adding Master as node
cp /storage/ubuntu-slurm/cgroup.conf /etc/slurm/cgroup.conf
useradd slurm
mkdir -p /var/spool/slurm/d
cp /storage/ubuntu-slurm/slurmd.service /etc/systemd/system/
nvidia-smi -r
systemctl enable slurmd
systemctl restart slurmd


echo "${g}"
echo ""
echo -e "setf 2" | tput -S
echo	"----------------------------------------------------------------------------------"
echo    "-------------------------- Slurm configured successfully -------------------------"
echo    "----------------------------------------------------------------------------------"	


