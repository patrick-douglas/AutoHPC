#!/bin/bash
#Este script Ã© executado atraves de um script primario
clear
w=$(tput sgr0) 
r=$(tput setaf 1)
g=$(tput setaf 2)
y=$(tput setaf 3)
echo "${g}"
echo	"-----------------------------------------------------------------------------------"
echo    "                                Configuring MPICH "
echo    "-----------------------------------------------------------------------------------"
#root requirements
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "${y}-----------------------------------------------------------------------------------"
    echo "This script requires root privileges, please run${w} sudo su${y} or${w} sudo -i ${y}prior to run it"
    echo "e.g.${w} sudo $0 ${y}"
    echo "-----------------------------------------------------------------------------------"
    exit
fi

echo "${w}"
apt-fast install -y build-essential gcc-multilib apt-utils zlib1g-dev perl perl-base git libtbb-dev libxml2-dev bowtie2 libssl-dev g++ libssl-dev libxml2-dev libatlas-base-dev libboost-all-dev gfortran
#Set -j option during make process
threads=`nproc`
#Set mpich $PATH
cd /root/
mpich_path=/root/mpich-4.0rc3/
mpich_tar=/root/mpich-4.0rc3.tar.gz
mpich_url=https://www.mpich.org/static/downloads/4.0rc3/mpich-4.0rc3.tar.gz
rm -rf $mpich_tar
cd ~/ && wget $mpich_url
cd ~/ && tar zxf $mpich_tar
cd $mpich_path && ./configure --prefix=/exports/mpich2 FCFLAGS=-std=legacy FFLAGS=-fallow-argument-mismatch
cd $mpich_path && make -j $threads
cd $mpich_path && make install -j $threads
rm -rf $mpich_path $mpich_tar
mpich_ver=`/exports/mpich2/bin/mpiexec --info | grep Version | awk '{print $2}'`
echo "${g}"
echo	"----------------------------------------------------------------------------------"
echo    "                   MPICH${w} $mpich_ver ${g}configured successfully"
echo    "----------------------------------------------------------------------------------"	
