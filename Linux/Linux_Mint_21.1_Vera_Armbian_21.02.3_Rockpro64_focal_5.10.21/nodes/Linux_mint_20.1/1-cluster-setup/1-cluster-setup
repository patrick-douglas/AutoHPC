#!/bin/bash
#Este script Ã© executado atraves de um script primario
rm -rf /home/.tmp/
mkdir -p /home/.tmp/
w=$(tput sgr0) 
r=$(tput setaf 1)
g=$(tput setaf 2) 
y=$(tput setaf 3)
p=$(tput setaf 5)
pb=$(tput bold)

USAGE="USAGE: $0 -c <clustername> -n <nodename> -p <ldappassword> -u <username> -w <networkinterfacename>"

if [ "$#" -lt "6" ] 
then 
    echo -e $USAGE;
exit 1    
else 
    var1=$2;
    var2=$4;
fi

while getopts c:n:p:u:w: option
do
case "${option}"
in
c) clustername=${OPTARG};;
n) node_name=${OPTARG};;
p) ldappassword=${OPTARG};;
u) user_name=$OPTARG;;
w) networkinterface=$OPTARG;;
esac
done

if [ "$clustername" = "" ]; then
"${g}Error, missing arguments:${y} -c | Cluster domain name | <string>
${w}$USAGE"
exit 1
fi

if [ "$node_name" = "" ]; then
"${g}Error, missing arguments:${y} -n | Node hostname | <string>
${w}$USAGE"
exit 1
fi

if [ "$ldappassword" = "" ]; then
"${g}Error, missing arguments:${y} -p | ldap password | <string>
${w}$USAGE"
exit 1
fi

if [ "$user_name" = "" ]; then
"${g}Error, missing arguments:${y} -u | User name | <string>
${w}$USAGE"
exit 1
fi

if [ "$networkinterface" = "" ]; then
"${g}Error, missing arguments:${y} -w | Network interface name | <string>
${w}$USAGE"
exit 1
fi

echo "${y}"
echo	"---------------------------------------------------------------------------------"
echo    "----------------- Phase 1: Identify the Cluster and the node --------------------"
echo    "---------------------------------------------------------------------------------"
echo 	""
echo    "----------------------------------------------------------------------------------"
echo	"${g}Cluster name:${w}"	
echo	"$clustername"
echo	"${g}Node hostname:${w}"
echo	"$node_name"
echo	"${g}LDAP password:${w}"
echo	"$ldappassword"
echo	"${g}User name:${w}"
echo	"$user_name"
echo	"${g}network interface name:${w}"
echo	"$networkinterface"
#echo	"${g}Copy sources list:${w}"
#echo	"$cp_sourceslist"
echo "${g}----------------------------------------------------------------------------------"
echo "${w}"

#Set -j option during make process
	threads=`ssh $node_name nproc`

#Install require packages
echo -e "setf 2" | tput -S	
echo	"----------------------------------------------------------------------------------"
echo    "------------------ Phase 2: Installing required packages -------------------------"
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S	

	ssh $node_name "apt-get update"
    ssh $node_name "sudo apt-get install language-pack-pt -y"
echo "installing apt-fast:${w}"	
#	ssh $node_name "sudo add-apt-repository -y ppa:apt-fast/stable"
	ssh $node_name '/bin/bash -c "$(curl -sL https://git.io/vokNn)"'
	ssh $node_name "apt-get update"
#	ssh $node_name 'DEBIAN_FRONTEND=noninteractive apt-get -y install apt-fast'
	ssh $node_name "sed -i 's/^_MAXNUM=5/_MAXNUM=16/' /etc/apt-fast.conf"
	ssh $node_name "apt-fast -y install software-properties-common"
	ssh $node_name "apt-fast install -y libc6"
	ssh $node_name "apt-fast install -y manpages-dev"
	ssh $node_name "apt-fast install -y libxml2 zlib1g"
	ssh $node_name 'DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-fast -q -y -o "Dpkg::Options::=--force-confdef" -o "Dpkg::Options::=--force-confold" upgrade'
#Java
ssh $node_name 'add-apt-repository ppa:linuxuprising/java -y && apt-fast update'
ssh $node_name 'echo oracle-java17-installer shared/accepted-oracle-license-v1-3 select true | sudo /usr/bin/debconf-set-selections'
ssh $node_name 'sudo apt-get -y install oracle-java17-installer'
ssh $node_name 'sudo apt install oracle-java17-set-default'
ssh $node_name 'DEBIAN_FRONTEND=noninteractive apt-fast install --yes vim build-essential gcc-multilib apt-utils zlib1g-dev perl perl-base git libtbb-dev libxml2-dev openssh-client openssh-server ntp ganglia-monitor nfs-common g++ make'

#	ssh $node_name "apt-fast -y purge libpam-ldap nscd"
	ssh $node_name "DEBIAN_FRONTEND=noninteractive apt-fast install -y libpam-ldap nscd"
	ssh $node_name "sed -i '27s/.*/base dc=$clustername,dc=com/' /etc/ldap.conf"
	ssh $node_name "sed -i '30s,.*,uri ldap://master.$clustername.com,' /etc/ldap.conf"
	ssh $node_name "sed -i '52s/.*/rootbinddn cn=admin,dc=$clustername,dc=com/' /etc/ldap.conf"

#Edit interfaces file

		echo "# The primary network interface" >> /home/.tmp/interfaces
		echo "auto $networkinterface" >> /home/.tmp/interfaces
		echo "iface $networkinterface inet dhcp" >> /home/.tmp/interfaces
		scp -r /home/.tmp/interfaces root@$node_name:/etc/network

	echo /home/.tmp/dhclient-$networkinterface.conf
	> /home/.tmp/dhclient-$networkinterface.conf
		echo "send fqdn.fqdn \"$node_name\";" >> /home/.tmp/dhclient-$networkinterface.conf
		echo "send fqdn.encoded on;" >> /home/.tmp/dhclient-$networkinterface.conf
		echo "send fqdn.server-update off;" >> /home/.tmp/dhclient-$networkinterface.conf
		echo "also request fqdn.fqdn;" >> /home/.tmp/dhclient-$networkinterface.conf
			scp -r /home/.tmp/dhclient-$networkinterface.conf root@$node_name:/etc/dhcp/

ssh $node_name "ifup $networkinterface"


#Mounting the master directories
echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Mounting the directories..."
echo    "----------------------------------------------------------------------------------"
 	ssh $node_name "mount -v master.$clustername.com:/root /root"
	ssh $node_name "mount -v master.$clustername.com:/home /home"
	ssh $node_name 'mkdir -p /export'
	ssh $node_name "mount -v master.$clustername.com:/export /export"
	ssh $node_name 'mkdir -p /storage'
#	ssh $node_name "mount master:/storage /storage"

#Editing the npt file

echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Editing the npt file and start ntp service..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S
	ssh $node_name "sed -i 's/^pool 0.ubuntu.pool.ntp.org iburst/server master.$clustername.com/' /etc/ntp.conf"
	ssh $node_name "sed -i '22s/.*/#/' /etc/ntp.conf"
	ssh $node_name "sed -i '23s/.*/#/' /etc/ntp.conf"
	ssh $node_name "sed -i '24s/.*/#/' /etc/ntp.conf"
	ssh $node_name "service ntp start"
echo -ne '                                                                         (100%)\r'
echo -ne '\n'

#Editing fstab file
echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Editing the fstab file..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S
scp root@$node_name:/etc/fstab /home/.tmp

LINE="master.$clustername.com:/root	/root	nfs nfsvers=3,nolock	0 0"
FILE=/home/.tmp/fstab
grep -q "$LINE" "$FILE" || echo "$LINE" >> "$FILE"

scp /home/.tmp/fstab root@$node_name:/etc
scp root@$node_name:/etc/fstab /home/.tmp

LINE="master.$clustername.com:/home	/home	nfs nfsvers=3,nolock	0 0"
FILE=/home/.tmp/fstab
grep -q "$LINE" "$FILE" || echo "$LINE" >> "$FILE"

scp /home/.tmp/fstab root@$node_name:/etc

scp root@$node_name:/etc/fstab /home/.tmp

LINE="master.$clustername.com:/export	/export	nfs nfsvers=3,nolock	0 0"
FILE=/home/.tmp/fstab
grep -q "$LINE" "$FILE" || echo "$LINE" >> "$FILE"

#LINE="master.$clustername.com:/storage	/storage	nfs nfsvers=3,nolock	0 0"
#FILE=/home/.tmp/fstab
#grep -q "$LINE" "$FILE" || echo "$LINE" >> "$FILE"

scp /home/.tmp/fstab root@$node_name:/etc
echo -ne '                                                                          (100%)\r'
echo -ne '\n'

#Mounting directories of master
echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Mounting the directories in the master..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S
	ssh $node_name "mount -v /root"
	ssh $node_name "mount -v /home"
	ssh $node_name "mount -v /export"
#	ssh $node_name "mount /storage"
#echo -ne '                                                                          (100%)\r'
#echo -ne '\n'

#Setting up ganglia
echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Configuring Ganglia..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S

	ssh $node_name	"apt-get purge ganglia-monitor -y"
	ssh $node_name	"apt-get install ganglia-monitor -y"

	ssh $node_name  "sed -i '/ mcast_join = 239.2.11.71/ a \  host = master.$clustername.com' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i -e '44d'  /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i 's/^  deaf = no             /  deaf = yes             /' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i 's/^  name = \"unspecified\"/  name = \"$clustername\"/' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i '35s/^/#/' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i '42s/^/#/' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i '43s/^/#/' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i '44s/^/#/' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i '45s/^/#/' /etc/ganglia/gmond.conf"
	ssh $node_name "sed -i '46s/^/#/' /etc/ganglia/gmond.conf"
		ssh $node_name service ganglia-monitor restart
	

ssh $node_name apt-fast update
echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Configuring nsswitch..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S
#OK Edit nsswitch file #T
	ssh $node_name "sed -i '7s/.*/passwd:         compat ldap/' /etc/nsswitch.conf"
	ssh $node_name "sed -i '8s/.*/group:          compat ldap/' /etc/nsswitch.conf"
	ssh $node_name "sed -i '9s/.*/shadow:         compat ldap/' /etc/nsswitch.conf"
	ssh $node_name "sed -i '12s/.*/hosts:          files dns/' /etc/nsswitch.conf"

# Edit the pam file

echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Configuring pam..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S

scp root@$node_name:/etc/pam.d/common-session /home/.tmp

sed -i '/# end of pam-auth-update config/d' /home/.tmp/common-session
sed -i '/session required	pam_mkhomedir.so	skel=/etc/skel  umask=0022/d' /home/.tmp/common-session

LINE='session required		pam_mkhomedir.so		skel=/etc/skel	umask=0022'
FILE=/home/.tmp/common-session
	grep -q "$LINE" "$FILE" || echo "$LINE" >> "$FILE"
	LINE='# end of pam-auth-update config'
	FILE=/home/.tmp/common-session
	grep -q "$LINE" "$FILE" || echo "$LINE" >> "$FILE"

scp /home/.tmp/common-session root@$node_name:/etc/pam.d/common-session
echo -ne '                                                                          (100%)\r'
echo -ne '\n'


#Edit sudoers
echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Configuring sudoers..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S
scp root@$node_name:/etc/sudoers /home/.tmp
sed -i '/%admin ALL=(ALL) ALL/ a \%admins ALL=(ALL) ALL' /home/.tmp/sudoers
scp /home/.tmp/sudoers root@$node_name:/etc/sudoers
echo -ne '                                                                          (100%)\r'
echo -ne '\n'

# Edit hostname file 

echo -e "setf 2" | tput -S
echo	" "
echo    "----------------------------------------------------------------------------------"
echo	"Changing hostname ..."
echo    "----------------------------------------------------------------------------------"
echo -e "setf 7" | tput -S
ssh $node_name "chattr -i /etc/hostname"
echo "$node_name" > /home/.tmp/hostname
scp /home/.tmp/hostname root@$node_name:/etc/hostname
ssh $node_name "chattr +i /etc/hostname"
echo -ne '                                                                          (100%)\r'
echo -ne '\n'
#disable lightdm
ssh $node_name 'systemctl stop lightdm.service'
ssh $node_name 'sudo apt purge lightdm -y'


echo "${g}"
echo	"------------------------------------------------------------------------------------"
echo    "---------------------- We finhished the node configuration -------------------------"
echo    "------------------------------------------------------------------------------------"
echo    "In the next step the PC need to be restarted, to test try run ssh to the node or try" 
echo 	"view the node through ganglia on web browser by typing 11.0.0.1/ganglia"
echo    "${p}$node_name${g}"
echo    "------------------------------------------------------------------------------------"
echo    "${p}"
echo	"suport by e-mail to patrick@ufpa.br ${g}"
echo    ""
echo    'Thank you :-D'
echo	" "
echo "
                                 ___        ______    __     __
                                |   |      |	  \  |  \   |  | 
                                |   |      |   D   ) |   \  |  | 
                                |   |      |      /  |    \ |  | 
                                |   |____  |      \  |  |\ \|  | 
                                |        | |   D   ) |  | \    |  
                                |________| |______/  |__|  \___|

                   LaboratÃ³rio de Biologia Molecular e Neuroecologia  - IFPA 
"
rm -rf /home/.tmp/
ssh $node_name "reboot"
